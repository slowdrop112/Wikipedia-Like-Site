@page "{id:int}"
@model ProiectPAW1.Pages.Articles.DetailsModel
@{
    ViewData["Title"] = Model.Article.Title;
}

<div class="container">
    <nav aria-label="breadcrumb" class="my-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-page="/Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-page="/Articles/Index">Articles</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Article.Title</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-md-8">
            <article>
                <header class="mb-4">
                    <h1 class="display-4">@Model.Article.Title</h1>
                    <div class="d-flex align-items-center text-muted mb-2">
                        <span class="badge bg-secondary me-2">@Model.Article.Domain</span>
                        <span>by @Model.Article.Author?.UserName</span>
                        <span class="mx-2">•</span>
                        <span>Created @Model.Article.CreatedAt.ToString("MMM dd, yyyy")</span>
                        @if (Model.Article.LastModifiedAt != Model.Article.CreatedAt)
                        {
                            <span class="mx-2">•</span>
                            <span>Updated @Model.Article.LastModifiedAt.ToString("MMM dd, yyyy")</span>
                        }
                    </div>
                    <div class="d-flex gap-2">
                        <a asp-page="./Edit" asp-route-id="@Model.Article.Id" class="btn btn-outline-primary">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                        @if (User.IsInRole("Moderator") || User.IsInRole("Administrator"))
                        {
                            <a asp-page="./Delete" asp-route-id="@Model.Article.Id" class="btn btn-outline-danger">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                            <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#historyModal">
                                <i class="bi bi-clock-history"></i> History
                            </button>
                        }
                    </div>
                </header>

                @if (Model.Article.Images.Any())
                {
                    <div class="mb-4">
                        <img src="@Model.Article.Images.First().ImagePath" 
                             alt="@Model.Article.Images.First().AltText" 
                             class="img-fluid rounded" />
                    </div>
                }

                @if (!Model.Article.Chapters.Any())
                {
                    <div class="alert alert-info">
                        This article has no content yet.
                    </div>
                }
                else
                {
                    <div class="row">
                        <div class="col-md-3">
                            <nav class="chapter-nav sticky-top" style="top: 2rem;">
                                <h5>Chapters</h5>
                                <div class="nav flex-column">
                                    @foreach (var chapter in Model.Article.Chapters.OrderBy(c => c.OrderIndex))
                                    {
                                        <a class="nav-link" href="#chapter-@chapter.Id">@chapter.Title</a>
                                    }
                                </div>
                            </nav>
                        </div>
                        <div class="col-md-9">
                            <div class="article-content">
                                @foreach (var chapter in Model.Article.Chapters.OrderBy(c => c.OrderIndex))
                                {
                                    <section id="chapter-@chapter.Id" class="mb-5">
                                        <h2>@chapter.Title</h2>
                                        @Html.Raw(System.Web.HttpUtility.HtmlEncode(chapter.Content).Replace(Environment.NewLine, "<br />"))
                                    </section>
                                }
                            </div>
                        </div>
                    </div>
                }
            </article>
        </div>

        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Article Information</h5>
                    <ul class="list-unstyled mb-0">
                        <li class="mb-2">
                            <i class="bi bi-person"></i> Author: @Model.Article.Author?.UserName
                        </li>
                        <li class="mb-2">
                            <i class="bi bi-folder"></i> Domain: @Model.Article.Domain
                        </li>
                        <li class="mb-2">
                            <i class="bi bi-calendar"></i> Created: @Model.Article.CreatedAt.ToString("MMM dd, yyyy")
                        </li>
                        <li class="mb-2">
                            <i class="bi bi-star-fill text-warning"></i> Rating: 
                            @if (Model.Article.RatingCount > 0)
                            {
                                <span>@Model.Article.AverageRating.ToString("F1") (@Model.Article.RatingCount @(Model.Article.RatingCount == 1 ? "rating" : "ratings"))</span>
                            }
                            else
                            {
                                <span>No ratings yet</span>
                            }
                        </li>
                        @if (Model.Article.IsProtected)
                        {
                            <li>
                                <i class="bi bi-lock-fill text-warning"></i> This article is protected
                            </li>
                        }
                    </ul>

                    @if (User.Identity?.IsAuthenticated ?? false)
                    {
                        <hr />
                        <div class="rating-section">
                            <h6>Rate this article</h6>
                            <form method="post" asp-page-handler="Rate" class="d-flex align-items-center gap-2">
                                <input type="hidden" name="articleId" value="@Model.Article.Id" />
                                <select name="rating" class="form-select form-select-sm" style="width: auto;">
                                    <option value="">Select rating</option>
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (Model.UserRating?.Rating == i)
                                        {
                                            <option value="@i" selected>@i @(i == 1 ? "star" : "stars")</option>
                                        }
                                        else
                                        {
                                            <option value="@i">@i @(i == 1 ? "star" : "stars")</option>
                                        }
                                    }
                                </select>
                                <button type="submit" class="btn btn-sm btn-primary">Rate</button>
                            </form>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-8">
            <div class="comments-section">
                <h3>Comments (@Model.Article.CommentCount)</h3>
                
                @if (User.Identity?.IsAuthenticated ?? false)
                {
                    <form method="post" asp-page-handler="Comment" class="mb-4">
                        <input type="hidden" name="articleId" value="@Model.Article.Id" />
                        <div class="form-group">
                            <textarea name="content" class="form-control" rows="3" 
                                    placeholder="Write your comment..." required maxlength="1000"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary mt-2">Post Comment</button>
                    </form>
                }
                else
                {
                    <div class="alert alert-info">
                        Please <a asp-area="Identity" asp-page="/Account/Login">log in</a> to post comments.
                    </div>
                }

                @foreach (var comment in Model.TopLevelComments)
                {
                    <div class="comment mb-4" id="comment-@comment.Id">
                        <div class="card">
                            <div class="card-body">
                                @if (comment.IsModerated)
                                {
                                    <div class="text-muted">
                                        <i class="bi bi-exclamation-triangle"></i>
                                        This comment has been hidden by a moderator.
                                        @if (!string.IsNullOrEmpty(comment.ModerationReason))
                                        {
                                            <span>Reason: @comment.ModerationReason</span>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <p class="card-text">@comment.Content</p>
                                }
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        By @comment.User.UserName on @comment.CreatedAt.ToString("MMM dd, yyyy HH:mm")
                                        @if (comment.ModifiedAt.HasValue)
                                        {
                                            <span>(edited)</span>
                                        }
                                    </small>
                                    <div class="btn-group">
                                        @if (User.Identity?.IsAuthenticated ?? false)
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-primary reply-btn"
                                                    data-comment-id="@comment.Id">
                                                Reply
                                            </button>
                                        }
                                        @if ((User.Identity?.Name == comment.User.UserName) || 
                                             User.IsInRole("Moderator") || 
                                             User.IsInRole("Administrator"))
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-secondary edit-btn"
                                                    data-comment-id="@comment.Id" 
                                                    data-content="@comment.Content">
                                                Edit
                                            </button>
                                            <form method="post" asp-page-handler="DeleteComment" class="d-inline">
                                                <input type="hidden" name="commentId" value="@comment.Id" />
                                                <button type="submit" class="btn btn-sm btn-outline-danger"
                                                        onclick="return confirm('Are you sure you want to delete this comment?')">
                                                    Delete
                                                </button>
                                            </form>
                                        }
                                        @if (User.IsInRole("Moderator") || User.IsInRole("Administrator"))
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-warning moderate-btn"
                                                    data-comment-id="@comment.Id">
                                                Moderate
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="replies ms-5">
                            @foreach (var reply in comment.Replies.OrderBy(r => r.CreatedAt))
                            {
                                <div class="comment mb-3" id="comment-@reply.Id">
                                    <div class="card">
                                        <div class="card-body">
                                            @if (reply.IsModerated)
                                            {
                                                <div class="text-muted">
                                                    <i class="bi bi-exclamation-triangle"></i>
                                                    This reply has been moderated.
                                                    @if (!string.IsNullOrEmpty(reply.ModerationReason))
                                                    {
                                                        <span>Reason: @reply.ModerationReason</span>
                                                    }
                                                </div>
                                            }
                                            else
                                            {
                                                <p class="card-text">@reply.Content</p>
                                            }
                                            <div class="d-flex justify-content-between align-items-center">
                                                <small class="text-muted">
                                                    By @reply.User.UserName on @reply.CreatedAt.ToString("MMM dd, yyyy HH:mm")
                                                    @if (reply.ModifiedAt.HasValue)
                                                    {
                                                        <span>(edited)</span>
                                                    }
                                                </small>
                                                <div class="btn-group">
                                                    @if ((User.Identity?.Name == reply.User.UserName) || 
                                                         User.IsInRole("Moderator") || 
                                                         User.IsInRole("Administrator"))
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-secondary edit-btn"
                                                                data-comment-id="@reply.Id" 
                                                                data-content="@reply.Content">
                                                            Edit
                                                        </button>
                                                        <form method="post" asp-page-handler="DeleteComment" class="d-inline">
                                                            <input type="hidden" name="commentId" value="@reply.Id" />
                                                            <button type="submit" class="btn btn-sm btn-outline-danger"
                                                                    onclick="return confirm('Are you sure you want to delete this reply?')">
                                                                Delete
                                                            </button>
                                                        </form>
                                                    }
                                                    @if (User.IsInRole("Moderator") || User.IsInRole("Administrator"))
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-warning moderate-btn"
                                                                data-comment-id="@reply.Id">
                                                            Moderate
                                                        </button>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="reply-form-@comment.Id" style="display: none;">
                            <form method="post" asp-page-handler="Reply" class="mt-3">
                                <input type="hidden" name="articleId" value="@Model.Article.Id" />
                                <input type="hidden" name="parentCommentId" value="@comment.Id" />
                                <div class="form-group">
                                    <textarea name="content" class="form-control" rows="2" 
                                            placeholder="Write your reply..." required maxlength="1000"></textarea>
                                </div>
                                <div class="mt-2">
                                    <button type="submit" class="btn btn-sm btn-primary">Post Reply</button>
                                    <button type="button" class="btn btn-sm btn-secondary cancel-reply"
                                            data-comment-id="@comment.Id">Cancel</button>
                                </div>
                            </form>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Edit Comment Modal -->
<div class="modal fade" id="editCommentModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Comment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" asp-page-handler="EditComment">
                <div class="modal-body">
                    <input type="hidden" name="commentId" id="editCommentId" />
                    <div class="form-group">
                        <textarea name="content" id="editCommentContent" class="form-control" 
                                rows="3" required maxlength="1000"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Moderate Comment Modal -->
<div class="modal fade" id="moderateCommentModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Moderate Comment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" asp-page-handler="ModerateComment">
                <div class="modal-body">
                    <input type="hidden" name="commentId" id="moderateCommentId" />
                    <div class="form-group">
                        <label for="moderationReason">Reason for moderation:</label>
                        <textarea name="reason" id="moderationReason" class="form-control" 
                                rows="2" required maxlength="500"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">Moderate Comment</button>
                </div>
            </form>
        </div>
    </div>
</div>

@if (User.IsInRole("Moderator") || User.IsInRole("Administrator"))
{
    <div class="modal fade" id="historyModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit History</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    @if (Model.Article.ArticleEdits.Any())
                    {
                        <div class="list-group">
                            @foreach (var edit in Model.Article.ArticleEdits.OrderByDescending(e => e.EditDate))
                            {
                                <div class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h6 class="mb-1">Edited by @edit.Editor?.UserName</h6>
                                        <small>@edit.EditDate.ToString("MMM dd, yyyy HH:mm")</small>
                                    </div>
                                    @if (!string.IsNullOrEmpty(edit.EditSummary))
                                    {
                                        <p class="mb-1">@edit.EditSummary</p>
                                    }
                                    <form method="post" class="mt-2">
                                        <input type="hidden" name="editId" value="@edit.Id" />
                                        <button type="submit" class="btn btn-sm btn-outline-warning" asp-page-handler="Revert">
                                            <i class="bi bi-arrow-counterclockwise"></i> Revert to this version
                                        </button>
                                    </form>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No edit history available.</p>
                    }
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Highlight active chapter in navigation
        $(document).ready(function () {
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        $('.chapter-nav .nav-link').removeClass('active');
                        $(`.chapter-nav .nav-link[href="#${entry.target.id}"]`).addClass('active');
                    }
                });
            }, { threshold: 0.5 });

            document.querySelectorAll('section[id^="chapter-"]').forEach((section) => {
                observer.observe(section);
            });

            // Handle reply buttons
            $('.reply-btn').click(function () {
                var commentId = $(this).data('comment-id');
                $('.reply-form-' + commentId).slideToggle();
            });

            // Handle cancel reply buttons
            $('.cancel-reply').click(function () {
                var commentId = $(this).data('comment-id');
                $('.reply-form-' + commentId).slideUp();
            });

            // Handle edit buttons
            $('.edit-btn').click(function () {
                var commentId = $(this).data('comment-id');
                var content = $(this).data('content');
                $('#editCommentId').val(commentId);
                $('#editCommentContent').val(content);
                $('#editCommentModal').modal('show');
            });

            // Handle moderate buttons
            $('.moderate-btn').click(function () {
                var commentId = $(this).data('comment-id');
                $('#moderateCommentId').val(commentId);
                $('#moderateCommentModal').modal('show');
            });
        });
    </script>
} 